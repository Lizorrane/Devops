pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'Jenkins-Zero-To-Hero/java-maven-sonar-argocd-helm-k8s/spring-boot-app/JenkinsFile'
      }
    }
   stage('Build and Test') {
    steps {
        sh 'pwd'  // Mostra o diret√≥rio atual
        sh 'ls -l'  // Lista os arquivos no workspace
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && ls -l'
    }
}

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://204.236.220.14:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "lizorrane/ultimate-cicd:${BUILD_NUMBER}"
        
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            withCredentials{[string(credentialsId: 'docker-cred', variable:'DOCKER_TOKEN')]} {
              sh 'echo $DOCKER_TOKEN | docker login -u lizorrane --password-stdin'

            def dockerImage = docker.image("${DOCKER_IMAGE}")
                dockerImage.push()

                sh 'docker logout'
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Devops"
            GIT_USER_NAME = "lizorrane"
        }
        steps {
            withCredentials([string(credentialsId: 'git', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "liz.mmarra@gmail.com"
                    git config user.name "lizorrane"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i -e "s/ultimate-cicd.*/ultimate-cicd:${BUILD_NUMBER}/g"  java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}

